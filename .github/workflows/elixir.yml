# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    tags: 
      - '*'

permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.14.1' # Define the elixir version [required]
        otp-version: '24.1' # Define the OTP version [required]
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: listing variables
      run: echo $DOCKER_USERNAME
      shell: bash
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    
  base64:

    name: Recover With Base64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo "MY_CLIENT_ID (***)    = ${DOCKER_PASSWORD}"
          echo "MY_CLIENT_ID (base64) = $(echo ${DOCKER_PASSWORD} | base64)"
          echo "DOCKER_USERNAME (***)    = ${DOCKER_USERNAME}"
          echo "DOCKER_USERNAME (base64) = $(echo ${DOCKER_USERNAME} | base64)"
          echo "Copy the above value, and then execute locally:"
          echo "echo PASTE_HERE | base64 -D"
        


      
  publish:

    name: upload new version to docker hub
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Publish to dockerhub
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: joss1091/fun_events
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }} 
        tags: "latest,${{ github.ref_name }}"
        snapshot: true
